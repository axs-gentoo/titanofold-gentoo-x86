# Copyright 1999-2013 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Header: $

inherit user

# @ECLASS: postgres
# @MAINTAINER:
# PostgreSQL <pgsql-bugs@gentoo.org>
# @AUTHOR: Aaron W. Swenson <titanofold@gentoo.org>
# @BLURB: An eclass for PostgreSQL-related packages
# @DESCRIPTION:
# This eclass provides common utility functions that many PostgreSQL-related
# packages perform, such as checking that the currently selected PostgreSQL
# slot is within a range, adding a user, and generating dependencies.

# @ECLASS-VARIABLE: POSTGRES_COMPAT
# @REQUIRED
# @DESCRIPTION:
# POSTGRES_COMPAT is an array containing the list of PostgreSQL slots with
# which your ebuild is compatible.

# @ECLASS-VARIABLE: POSTGRES_USEDEP
# @DESCRIPTION:
# POSTGRES_USEDEP is a comma-seperated list of USE flags in the same style as
# for Portage to toggle USE flag dependencies for dev-db/postgresql

# @ECLASS-VARIABLE: POSTGRES_DEPEND
# @DESCRIPTION:
# This variable is generated by this eclass. It contains a dependency string to
# be used in *DEPEND in your ebuild.

if declare -p POSTGRES_COMPAT &> /dev/null ; then
	# We prefer newer over older
	readarray -t POSTGRES_COMPAT < <(printf '%s\n' "${POSTGRES_COMPAT[@]}" | sort -nr)

	POSTGRES_DEPEND="|| ("
	for _slot in "${POSTGRES_COMPAT[@]}" ; do
		POSTGRES_DEPEND+=" dev-db/postgresql:${_slot}"
		declare -p POSTGRES_USEDEP &>/dev/null && POSTGRES_DEPEND+="[${POSTGRES_USEDEP}]"
	done
	POSTGRES_DEPEND+=" )"
else
	die 'POSTGRES_COMPAT not declared.'
fi

# @ECLASS-VARIABLE: _POSTGRES_ALL_SLOTS
# @INTERNAL
# @DESCRIPTION:
# This variable contains a list of all available slots installed on the system.

_POSTGRES_ALL_SLOTS=( $(eselect --brief postgresql list) )
readarray -t _POSTGRES_ALL_SLOTS < <(printf '%s\n' "${_POSTGRES_ALL_SLOTS[@]}" | sort -nr)

# @FUNCTION: postgres_set_slot
# @DESCRIPTION:
# This function exists should not be used for multi-slot ebuilds.
# Sets PG_CONFIG and PG_SLOT to one of the slots defined in POSTGRES_COMPAT and
# is installed on the host system. It should called in in pkg_setup() for single-slot ebuilds.

# @ECLASS-VARIABLE: PG_CONFIG
# @DESCRIPTION:
# Exported environment variable that contains the pg_config command selected by
# postgres_set_slot().

# @ECLASS-VARIABLE: PG_SLOT
# @DESCRIPTION:
# Exported environment variable that contains the PostgreSQL slot selelected by
# postgres_set_slot().

postgres_pkg_setup() {
	local user_slot
	for user_slot in "${POSTGRES_COMPAT[@]}"; do
		if has "${user_slot}" ${_POSTGRES_ALL_SLOTS}; then
			export PG_SLOT="${user_slot}"
			export PG_CONFIG="pg_config${user_slot//./}"
			# Stop after finding the highest installed slot.
			break
		fi
	done

	if [[ -z ${PG_SLOT} ]]; then
		eerror "You don't have any suitable PostgreSQL slots installed. You should"
		eerror "install one of the following PostgreSQL slots:"
		eerror "    ${POSTGRES_COMPAT}"
		die
	fi
}

# @FUNCTION: postgres_new_user
# @DESCRIPTION:
# Creates the "postgres" system group and user -- which is separate from
# the database role -- in addition to the developer defined user. Takes
# the same arguments as "enewuser".
postgres_new_user() {
	enewgroup postgres 70
	enewuser postgres 70 /bin/bash /var/lib/postgresql postgres

	if [[ $# -gt 0 ]] ; then
		if [[ "$1" = "postgres" ]] ; then
			ewarn "Invalid username 'postgres', skipping"
		else
			local groups=$5
			[[ -n "${groups}" ]] && groups+=",postgres" || groups="postgres"
			enewuser $1 $2 $3 $4 ${groups}
		fi
	fi
}
